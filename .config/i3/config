# i3 config file (v4)

############
#  myconf  #
############

# modifiers
set $mod Mod1
set $wmod Mod4

# manually set colors
#set $termbg #1c1c20
#set $termfg #e0e0df

# set colors from xresources
set_from_resource $termbg color0 #232323
set_from_resource $termfg color15 #a0a0a0

# polybar
exec_always --no-startup-id $HOME/.config/launch_polybar.sh

# eyesaver
# this needs to be done once on startup otherwise the pkill fails and
# the and clause fails
exec --no-startup-id redshift
exec_always --no-startup-id pkill redshift && redshift

# Use feh to set background to ~/Pictures/wallpaper.jpg, which can be symlinked
exec_always --no-startup-id feh  --bg-fill ~/.rice/wallpape.png
#exec_always --no-startup-id feh --bg-tile ~/Pictures/wallpaper.jpg

# compositor
exec --no-startup-id /usr/bin/compton -bC --config /home/dbishop/.config/compton.conf

# Some nice stuff
exec --no-startup-id /usr/bin/thunar --daemon
exec --no-startup-id /usr/bin/numlockx &

# load up default terminal config for ws1, and then fire off some default progs
#exec --no-startup-id "i3-msg 'workspace $ws1; append_layout /home/fiplo/.config/i3/ws1.json'"
#exec --no-startup-id "i3-msg exec urxvt\; exec urxvt\; exec urxvt\; exec urxvt"

bindsym $mod+o exec "scrot 'ScreenShot_%Y-%m-%d_at_%I:%M:%S-%p.png' -e 'mv $f ~/Pictures/scrot-screenshots'"
#bindsym $mod+p exec maim -s | xclip -selection clipboard -t image/png
bindsym $mod+p exec "sleep 0.2 ; scrot -s 'ScreenShot_%Y-%m-%d_at_%I:%M:%S-%p.png' -e 'mv $f ~/Pictures/scrot-screenshots'"

bindsym $wmod+p exec xset dpms force off

# rofi/dmenu
#bindsym $mod+d exec --no-startup-id rofi -opacity 100 -show run
bindsym $mod+m exec --no-startup-id rofi -opacity 100 -show run 
bindsym XF86Search exec --no-startup-id rofi -opacity 100 -show run 
bindsym $mod+s exec --no-startup-id rofi -opacity 100 -show ssh 

# mpc bindings (ncmpcpp control)
bindsym $wmod+Right exec --no-startup-id mpc next
bindsym $wmod+Left exec --no-startup-id mpc prev
bindsym $wmod+Shift+Right exec --no-startup-id mpc seek +0:0:7
bindsym $wmod+Shift+Left exec --no-startup-id mpc seek -0:0:7
bindsym $wmod+space exec --no-startup-id mpc toggle
bindsym $wmod+s exec --no-startup-id mpc single
bindsym $wmod+z exec --no-startup-id mpc random
bindsym $wmod+x exec --no-startup-id mpc stop

# media controls
bindsym XF86AudioNext exec --no-startup-id mpc next
bindsym XF86AudioPrev exec --no-startup-id mpc prev
bindsym XF86AudioPlay exec --no-startup-id mpc toggle
bindsym Shift+XF86AudioPlay exec --no-startup-id mpc stop
bindsym XF86AudioMute exec --no-startup-id amixer set Master toggle
bindsym XF86AudioLowerVolume exec --no-startup-id amixer set Master 5%-
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer set Master 5%+

# brightness
bindsym XF86MonBrightnessUp exec --no-startup-id light -A 10
bindsym XF86MonBrightnessDown exec --no-startup-id light -U 10

# lock
bindsym $wmod+l exec --no-startup-id /usr/local/bin/lock.sh
#bindsym $mod+l exec /usr/bin/i3lock-fancy -pt ""
# tab through workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# vim-keybindings for movement
# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
# b for besides.
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# Change floating behaviors with space
# toggle tiling / floating
bindsym $mod+space floating toggle
# change focus between tiling / floating windows
bindsym $mod+Shift+space focus mode_toggle


########################
#  windows/workspaces  #
########################

# grayscale colors
set $white      #ffffff
set $alive      #aaaaaa
set $sixes      #666666
set $fives      #555555
set $fours      #444444
set $threes     #333333
set $twos       #222222
set $ones       #111111
set $black      #000000

# ws names
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9
set $ws0 10

# window assignments
assign [class="Firefox"] $ws2
assign [class="Atom"] $ws3
assign [class="^Inkscape$"] $ws7
assign [class="Gimp"] $ws7
assign [class="libreoffice"] $ws8
assign [class="Spotify"] $ws9

# floating windows
for_window [class="Bitwig Studio"] floating enable
for_window [class="Display"] floating enable
for_window [class="feh"] floating enable
for_window [class="Leafpad"] floating enable
for_window [class="Lxappearance"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="Thunar"] floating enable
for_window [class="Transmission-gtk"] floating enable
for_window [class="Yad"] floating enable
for_window [class="Xscreensaver-demo"] floating enable
for_window [class="Zenmap"] floating enable

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws0

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws0

# borders
# state                     border   bg       text    indicator
client.focused              $(xrdb:color1)  $termfg  $white  $termfg
client.unfocused            $termbg  $termbg  $alive  $termbg
client.focused_inactive     $termbg  $termbg  $alive  $termbg
client.urgent               $termfg  $termfg  $white  $termfg


###########
#  i3bar  #
###########

#bar {
        #status_command i3blocks
        #tray_output none
        #position top
        #font pango:Tewi, Awesome 8
        #colors {
                #background  $termbg
                #statusline  $termfg

                ##selection          #border #fill    #text
                #focused_workspace   $termfg $termfg  $termbg
                #active_workspace    $termbg $termbg  $termfg
                #inactive_workspace  $termbg $termbg  $termfg
                #urgent_workspace    $termfg $termfg  $termbg
                #binding_mode        $termfg $termbg  $termfg
        #}
#}


####################
#  i3-gaps config  #
####################

# Disable window titlebars entirely
for_window [class="^.*"] border pixel 0 



# # Set inner/outer gaps
gaps inner 10
gaps outer 10

# Additionally, you can issue commands with the following syntax. This is
# useful to bind keys to changing the gap size.
#gaps inner|outer current|all set|plus|minus <px>
#gaps inner all set 10
#gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on 

# Smart borders (draw borders around container only if it is not the only
# container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size
# to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying
# outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or
# 0 (remove gaps for current workspace). If you also press Shift with these
# keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (O) Outer, (I) Inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)

bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym Escape mode "default"
        bindsym Return mode "default"
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Shift+o      mode "$mode_gaps_outer"
        bindsym Shift+I      mode "$mode_gaps_inner"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
    bindsym plus gaps outer current plus 5
    bindsym minus gaps outer current minus 5
    bindsym 0     gaps outer current set 0

    bindsym Shift+plus  gaps outer all plus 5
    bindsym Shift+minus gaps outer all minus 5
    bindsym Shift+0     gaps outer all set 0

    bindsym Return mode "default"
    bindsym Escape mode "default"
}


###################
#  power options  #
###################

#set $Locker /usr/local/bin/py3lock.py && sleep 1
#
#set $mode_system System: (L) Logout, (R) Reboot, (S) Shutdown
#mode "$mode_system" {
#    #bindsym l exec --no-startup-id $Locker, mode "default"
#    #bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
#    #bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
#    bindsym Shift+l exec --no-startup-id i3-msg exit, mode "default"
#    bindsym Shift+r exec --no-startup-id systemctl reboot, mode "default"
#    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"
#
#    # back to normal: Enter or Escape
#    bindsym Return mode "default"
#    bindsym Escape mode "default"
#}
#
#bindsym $mod+Escape mode "$mode_system"

## Above power menu config commented and deprecated for this awesomeness
bindsym $mod+Escape exec --no-startup-id /usr/local/bin/power_menu.sh


#################
#  resize mode  #
#################

set $resize Resize
bindsym $mod+r mode "resize"

mode "$resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}


############
# defaults #
############

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block.
# font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:Open Sans 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
#bindsym $mod+w layout tabbed
#bindsym $mod+e layout toggle split

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -f 'pango: tewi 8' -t warning -m 'Do you want to exit out of i3?' -b 'Yes, exit i3' 'i3-msg exit'"
